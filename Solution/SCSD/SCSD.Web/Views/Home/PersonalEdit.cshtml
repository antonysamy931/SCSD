@model SCSD.DTO.Model.UserDetail

@{
    ViewBag.Title = "PersonalEdit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="row">
    <ol class="breadcrumb">
        <li><a href="@Url.Action("Dashboard", "Home")"><span class="glyphicon glyphicon-home" aria-hidden="true"></span>&nbsp;Dashboard</a></li>
        <li><a href="@Url.Action("Personal", "Home")">&nbsp;Profile</a></li>
        <li class="active">Edit</li>
    </ol>
</div>
<div class="col-sm-12">
    <h1>Update Profile</h1>
</div>

<div class="col-sm-12">
    <div class="panel panel-default">

        @using (Html.BeginForm("PersonalEdit", "Home", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal" }))
        {
            @Html.AntiForgeryToken()
            if (ViewData.ModelState[""] != null && ViewData.ModelState[""].Errors.Count > 0)
            {
            @Html.ValidationSummary(true, string.Empty, new { @class = "alert alert-danger" })                        
            }
            <div class="panel-body">
                <fieldset>

                    <div class="form-group ">
                        @Html.LabelFor(model => model.Name, new { @class = "col-sm-4 control-label" })
                        <div class="col-sm-4">
                            @Html.TextBoxFor(model => model.Name, new { @class = "form-control input-sm", @placeholder = "Name" })
                            @Html.ValidationMessageFor(model => model.Name)
                        </div>
                    </div>

                    <div class="form-group ">
                        @Html.LabelFor(model => model.Age, new { @class = "col-sm-4 control-label" })
                        <div class="col-sm-4">
                            @Html.TextBoxFor(model => model.Age, new { @class = "form-control input-sm", @placeholder = "Age" })
                            @Html.ValidationMessageFor(model => model.Age)
                        </div>
                    </div>

                    <div class="form-group ">
                        @Html.LabelFor(model => model.Gender, new { @class = "col-sm-4 control-label" })

                        <label>
                            @Html.RadioButtonFor(x => x.Gender, "Male", new { Checked = "True" })
                            Male</label>
                        <label>
                            @Html.RadioButtonFor(x => x.Gender, "Female")
                            Female 
                        </label>
                        @Html.ValidationMessageFor(model => model.Gender)
                    </div>

                    <div class="form-group ">
                        @Html.LabelFor(model => model.DOB, new { @class = "col-sm-4 control-label" })
                        <div class="col-sm-4">
                            @Html.TextBoxFor(model => model.DOB, new { @id = "DOB", @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(model => model.DOB)
                        </div>
                    </div>

                    <div class="form-group ">
                        @Html.LabelFor(model => model.Marital, new { @class = "col-sm-4 control-label" })
                        <div class="col-sm-4">
                            @Html.DropDownListFor(x => x.Marital, new SelectList(Model.Maritals), "--Select--", new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(model => model.Marital)
                        </div>
                    </div>

                    <div class="form-group ">
                        @Html.LabelFor(x => x.UserType, new { @class = "col-sm-4 control-label" })
                        <div class="col-sm-4">
                            @Html.DropDownListFor(x => x.UserType, new SelectList(Model.UserTypes, "Key", "Value"), "--Select--", new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(x => x.UserType)
                        </div>
                    </div>

                    <div class="form-group ">
                        @Html.LabelFor(x => x.UserGroupType, new { @class = "col-sm-4 control-label" })
                        <div class="col-sm-4">
                            @Html.DropDownListFor(x => x.UserGroupType, new SelectList(Model.UserGroups, "Key", "Value"), "--Select--", new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(x => x.UserGroupType)
                        </div>
                    </div>

                </fieldset>
            </div>
            <div class="panel-footer text-right">
                <input class="btn btn-default" type="submit" value="Update">
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script type="text/javascript">
    $(document).ready(function () {
        $('#DOB').datepicker({
            changeMonth: true,
            changeYear: true,
            yearRange: "1900:2000"
        });
    });
</script>